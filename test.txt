# Base filename pattern
$baseFileName = "service-log"
$extension = ".txt"
$counter = 1

# Loop to find next available log file name
do {
    $logFile = Join-Path $logFolder ("{0}_{1}{2}" -f $baseFileName, $counter, $extension)
    $counter++
} while (Test-Path $logFile)



foreach ($svc in $targetServices) {
    try {
        $svcDetails = Get-WmiObject -Class Win32_Service -Filter "Name = '$($svc.Name)'" -ErrorAction Stop

        if ($svcDetails.StartMode -eq 'Disabled') {
            Write-Log "[SKIP] '$($svc.Name)' is disabled and cannot be started." "Yellow"
            continue
        }

        if ($svc.Status -eq 'Running') {
            Write-Log "[INFO] '$($svc.Name)' is running. Restarting..." "Cyan"
            Stop-Service -Name $svc.Name -Force -ErrorAction Stop
            Start-Sleep -Seconds 2
        }

        Start-Service -Name $svc.Name -ErrorAction Stop
        Write-Log "[SUCCESS] '$($svc.Name)' started successfully." "Green"
    }
    catch {
        # Extract the detailed reason for failure
        $errorMessage = $_.Exception.Message
      $stack = $_.ScriptStackTrace
        $fullError = $_.ToString()
        Write-Log "[ERROR] Failed to start '$($svc.Name)': $errorMessage" "Red"

        # Optional: write more details (e.g., HRESULT, inner exception)
        if ($_.Exception.InnerException) {
            Write-Log "[DEBUG] Inner Exception: $($_.Exception.InnerException.Message)" "DarkGray"
        }

        # Continue to next service even if this one fails
        continue
    }
}
